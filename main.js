!function(){"use strict";class e{constructor(e,t,s,r,i,o){let{name:n,link:l,isLiked:a,_id:d,userId:c,ownerId:u}=e;this._name=n,this._link=l,this._likes=a,this._id=d,this._userId=c,this._ownerId=u,this._myId=t,this._cardSelector=s,this._handleCardClick=r,this._handleDeleteClick=i,this._handleLikeClick=o}getId(){return this._id}_getData(){return{name:this._name,link:this._link}}setLikes(e){this._likes=e,this._renderLikes()}_renderLikes(){this._likes?this._cardElement.querySelector(".card__like-button").classList.add("card__like-button_active"):this._cardElement.querySelector(".card__like-button").classList.remove("card__like-button_active")}_hideDeleteButton(){this._ownerId!==this._userId&&this._cardElement.querySelector(".card__delete-button").remove()}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeClick(this))),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick(this._getData())})),this._hideDeleteButton()}remove(){this._cardElement.remove()}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardElement}_fillCardTemplate(){const e=this._cardElement.querySelector(".card__image");e.alt=`Photo of ${this._name}`,e.src=this._link,this._cardElement.id=this.imageId,this._cardElement.querySelector(".card__title").textContent=this._name}getView(){return this._cardElement=this._getTemplate(),this._fillCardTemplate(),this._setEventListeners(),this._renderLikes(),this._cardElement}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}resetValidation(){this._inputList.forEach((e=>{const t=this._formElement.querySelector(`#${e.id}-error`);this._hideInputError(e,t)})),this._toggleButtonState()}_toggleButtonState(){if(this._hasInvalidInput())return this._buttonElement.classList.add(this._inactiveButtonClass),void(this._buttonElement.disabled=!0);this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_setEventListener(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListener()}}class s{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}addItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__overlay")||e.target.classList.contains("modal__close"))&&this.close()}))}}class i extends r{constructor(e){let{popupSelector:t,handleFormSubmit:s,loadingButtonText:r}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=s,this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._submitButton=this._popupForm.querySelector(".modal__button"),this._buttonText=this._submitButton.textContent,this._loadingButtonText=r}_getInputValues(){return this._newData={},this._inputList.forEach((e=>{this._newData[e.name]=e.value})),this._newData}setEventListener(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}showLoading(){this._submitButton.textContent=this._loadingButtonText}hideLoading(){this._submitButton.textContent=this._buttonText}}const o=document.querySelector("#profile-edit-button"),n=document.querySelector("#profile-add-button"),l=document.querySelector("#profile-edit-modal"),a=document.querySelector("#add-card-modal"),d=document.querySelector("#preview-modal"),c=(l.querySelector(".modal__close"),a.querySelector(".modal__close"),d.querySelector(".modal__close"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#edit-form-title")),u=document.querySelector("#edit-form-description"),_=l.querySelector(".modal__form"),h=a.querySelector(".modal__form"),m=(document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,h.querySelector(".modal__input_type_title"),h.querySelector(".modal__input_type_url"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-footer"),{inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"});let p,E;const S=new class{constructor(e){this._url=e.baseUrl,this._headers=e.headers}getUserInfo(){return fetch(`${this._url}/users/me`,{method:"GET",headers:this._headers}).then(this._processResponse)}getInitialCards(){return fetch(`${this._url}/cards`,{method:"GET",headers:this._headers}).then(this._processResponse)}editProfile(e){return fetch(`${this._url}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._processResponse)}addNewCard(e){let{name:t,link:s}=e;return fetch(`${this._url}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._processResponse)}deleteCard(e){return fetch(`${this._url}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._processResponse)}likeCard(e){return fetch(`${this._url}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._processResponse)}unlikeCard(e){return fetch(`${this._url}/cards/${e}/likes/`,{method:"DELETE",headers:this._headers}).then(this._processResponse)}updateProfilePicture(e){return fetch(`${this._url}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then(this._processResponse)}_processResponse=e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"bcc6c959-bae4-4de1-885c-059746718b41","Content-Type":"application/json"}}),v=new class{constructor(e){let{nameSelector:t,professionSelector:s,avatarSelector:r}=e;this._name=document.querySelector(t),this._about=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){let{name:t,about:s,avatar:r}=e;this._name.textContent=t,this._about.textContent=s,r&&(this._avatarElement.src=r)}}({nameSelector:".profile__title",professionSelector:".profile__description",avatarSelector:".profile__image"});function f(e){e.likes?S.unlikeCard(e.id).then((t=>{e.setLikes(t.isLiked)})).catch(console.error):S.likeCard(e.id).then((t=>{e.setLikes(t.isLiked)})).catch(console.error)}function y(e){g.open(e)}Promise.all([S.getUserInfo(),S.getInitialCards()]).then((e=>{let[t,r]=e;v.setUserInfo(t),p=t.id,E=new s({items:r,renderer:e=>{let{name:t,link:s,isLiked:r,id:i,userId:o,ownerId:n}=e;const l=k({name:t,link:s,isLiked:r,id:i,userId:o,ownerId:n});E.addItem(l)}},".cards__list"),E.renderItems()})).catch(console.error);const L=new class extends r{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".modal__button")}setSubmitAction(e){this._handleSubmit=e}setLoading(e,t){this._submitButton.textContent=e?"Deleting...":t}setEventListeners(){super.setEventListeners(),this._submitButton.addEventListener("click",(()=>{this._handleSubmit()}))}}("#delete-card-modal");function b(e){L.open(),L.setSubmitAction((()=>{L.setLoading(!0),S.deleteCard(e.getId()).then((()=>{e.remove(),L.close()})).catch(console.error).finally((()=>{L.setLoading(!1,"Yes")}))}))}function k(t){let{name:s,link:r,isLiked:i,id:o,userId:n,ownerId:l}=t;return new e({name:s,link:r,isLiked:i,id:o,userId:n,ownerId:l},p,"#card-template",y,b,f).getView()}L.setEventListeners();const g=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._imageElement=this._popupElement.querySelector(".modal__preview-image"),this._footerElement=this._popupElement.querySelector(".modal__preview-footer")}open(e){let{link:t,name:s}=e;this._footerElement.textContent=s,this._imageElement.src=t,this._imageElement.alt=s,super.open()}}({popupSelector:"#preview-modal"});g.setEventListeners();const C=new i({popupSelector:"#profile-edit-modal",handleFormSubmit:e=>{C.showLoading(),S.editProfile(e).then((()=>{v.setUserInfo(e),C.close()})).catch(console.error).finally((()=>{C.hideLoading()}))},loadingButtonText:"Saving..."});C.setEventListener(),o.addEventListener("click",(()=>{const e=v.getUserInfo();c.value=e.name,u.value=e.about,C.open()}));const q=new t(m,h);q.enableValidation();const I=new t(m,_),w=new t(m,document.querySelector("#edit-avatar-modal").querySelector(".modal__form"));I.enableValidation(),w.enableValidation();const B=new i({popupSelector:"#add-card-modal",handleFormSubmit:e=>{B.showLoading(),S.addNewCard(e).then((e=>{const t=k(e);E.prependItem(t),B.close()})).catch(console.error).finally((()=>{B.hideLoading()}))},loadingButtonText:"Saving..."});B.close(),B.setEventListener(),n.addEventListener("click",(()=>{q.resetValidation(),B.open()}));const x=document.querySelector(".profile__image-overlay"),T=(document.querySelector("#profile-avatar"),new i({popupSelector:"#edit-avatar-modal",handleFormSubmit:e=>{T.showLoading(),S.updateProfilePicture(e).then((e=>{v.setUserInfo(e),T.close()})).catch(console.error).finally((()=>{T.hideLoading()}))},loadingButtonText:"Saving..."}));T.setEventListener(),x.addEventListener("click",(()=>{w.resetValidation(),T.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,